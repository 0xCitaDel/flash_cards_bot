import operator

from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.text import Const, Format, Jinja, List
from aiogram_dialog.widgets.kbd import (
    Button,
    Group,
    Radio,
    Row,
    ScrollingGroup,
    Select
)

from . import getters
from . import handlers
from .handlers import LessonHandler
from bot.aiogram_dialog.scrolling_group import ScrollingGroupCustom
from bot.handlers.common_handlers import go_back
from bot.handlers.handlers import main_menu 
from bot.states import BebrisDialogSG, BebrisTrainDialogSG

handle = LessonHandler()

choice_playlist_window = Window(
    Const('–í—ã–±—Ä–∏ —Ü–≤–µ—Ç –ø–ª–µ–π–ª–∏—Å—Ç–∞'),
    ScrollingGroup(
        Group(
            Select(
                Format('{item[2]} {item[1]}'),
                id='playlist_btns',
                items='playlists',
                item_id_getter=lambda x: x[0],
                on_click=handle.select_lesson
            ),
        ),
        id='playlist_scroll',
        width=1,
        height=5,
        hide_on_single_page=True,
    ),
    Row(
        Button(Const('‚èé –ù–∞–∑–∞–¥'), id='main_menu', on_click=main_menu),
        Button(Const('‚Üª –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ'), id='repeat_mode', on_click=handlers.choice_repeat_mode),
    ),
    getter=getters.playlist_getter,
    state=BebrisDialogSG.start
)


choice_lesson_window = Window(
    Jinja(
        '<b>--- –ü–∞–º—è—Ç–∫–∞ ---</b>\n\n'
        '<blockquote>–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∏ —É—Ä–æ–∫–∞.</blockquote>\n\n'
        'üî¥ - <i>–ü—Ä–æ–≥—Ä–µ—Å—Å –º–µ–Ω—å—à–µ 60%</i>\n'
        'üü† - <i>–ü—Ä–æ–≥—Ä–µ—Å—Å 60-90%</i>\n'
        'üü¢ - <i>–ü—Ä–æ–≥—Ä–µ—Å—Å 90-100%</i>\n\n'
        '<b>--- –í—ã–±–µ—Ä–∏ –∏–ª–∏ –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞ ---</b>\n\n'
    ),
    List(
        Format('{item[3]} <b>‚Ññ{item[0]}</b>  {item[1]} {item[2]}'),
        page_size=8,
        id='lessons_scroll',
        items='lessons'
    ),
    ScrollingGroupCustom(
        Group(
            Select(
                Format('{item[0]}'),
                id='lesson_btns',
                items='lessons',
                item_id_getter=lambda x: x[0],
                on_click=handle.initialize_lesson
            ),
        ),
        id='lessons_scroll',
        width=8,
        height=1,
        hide_on_single_page=True,
    ),
    TextInput(
        id='age_input',
        on_success=handle.initialize_lesson_from_input
    ),
    Row(
        Button(Const('‚èé –ù–∞–∑–∞–¥'), id='go_back_btn', on_click=go_back),
        Button(Const('‚ò∞ M–µ–Ω—é'), id='main_menu', on_click=main_menu),
    ),
    parse_mode='HTML',
    getter=getters.lessons_getter,
    state=BebrisDialogSG.choice_lesson
)


preparation_window = Window(
    Jinja(
        '<blockquote>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —É—Ä–æ–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –±—É–¥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ —Ä–∞–∑–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.</blockquote>\n\n'
        '{% for card in first_cards %}'
        '{{ card[3] }}. {{ card[1] }} - {{ card[2]}}\n'
        '{% endfor %}'
        '‚Ä¢‚Ä¢‚Ä¢\n\n'
        '‚öôÔ∏è <b>–†–µ–∂–∏–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:</b>\n'
        'RU2EN - <i>—Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π</i>\n'
        'EN2RU - <i>—Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π</i>\n'
    ),
    Button(Const('–ù–∞—á–∞—Ç—å'), id='start', on_click=handle.start_flashcard_session),
    Radio(
        checked_text=Format('üîò {item[0]}'),
        unchecked_text=Format('‚ö™Ô∏è {item[0]}'),
        id='radio_reverse_mode',
        item_id_getter=operator.itemgetter(1),
        items=[('RU to EN', '0'), ('EN to RU', '1')],
    ),
    Row(
        Button(Const('‚èé –ù–∞–∑–∞–¥'), id='go_back_btn', on_click=go_back),
        Button(Const('–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏'), id='get_all_cards', on_click=handle.show_all_cards),
    ),
    parse_mode='HTML',
    getter=getters.preparation_getter,
    state=BebrisDialogSG.preparation
)


show_all_cards_window = Window(
    Format('<b>–í—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏:</b>\n'),
    List(
        Format('{item[3]}. {item[1]} - {item[2]}'),
        id='all_cards_scroll',
        items='all_cards'
    ),
    Button(Const('‚èé –ù–∞–∑–∞–¥'), id='go_back_btn', on_click=go_back),
    parse_mode='HTML',
    getter=getters.show_all_cards_getter,
    state=BebrisDialogSG.show_all_cards
)


flashcard_window = Window(
    Jinja(
        '{{ position }}/{{total_cards}} (#{{ current_card_id }})\n\n'
        '{{ front_text }}\n\n'
        '<tg-spoiler>{{ back_text }}</tg-spoiler>\n\n'
        'üî¥ {{ total_wrong_answers }} - {{ total_correct_answers }} üü¢ ({{ accuracy_percent }}%)'
    ),
    Row(
        Button(Const('–ù–µ –ø–æ–º–Ω—é'), id='wrong', on_click=handle.next_card_or_completion),
        Button(Const('–ü–æ–º–Ω—é'), id='correct', on_click=handle.next_card_or_completion),
    ),
    Button(Const('–ó–∞–≤–µ—Ä—à–∏—Ç—å'), id='lesson_exit', on_click=handle.lesson_exit),
    parse_mode='HTML',
    getter=getters.next_card_getter,
    state=BebrisDialogSG.next_card
)


lesson_exit_window = Window(
    Const('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?\n\n<i>‚ö†Ô∏è  –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–µ–∫—É—â–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏</i> <b>–Ω–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.</b>'),
    Button(Const('–î–∞, –≤—ã–π—Ç–∏ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'), id='main_menu', on_click=main_menu),
    Button(Const('‚èé –û—Ç–º–µ–Ω–∞'), id='go_back_btn', on_click=go_back),
    parse_mode='HTML',
    state=BebrisDialogSG.lesson_exit
)


conclusion_window = Window(
    Format('{data} = {data2}'),
    getter=getters.conclusion_getter,
    state=BebrisDialogSG.conclusion
)


bebris_dialog = Dialog(
    choice_playlist_window,
    choice_lesson_window,
    preparation_window,
    show_all_cards_window,
    flashcard_window,
    lesson_exit_window,
    conclusion_window
)

choice_train_lesson_window = Window(
    Jinja('<b>--- –í—ã–±–µ—Ä–∏ –∏–ª–∏ –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞ ---</b>\n\n'),
    # List(
    #     Format('{item[3]} <b>‚Ññ{item[0]}</b>  {item[1]} {item[2]}'),
    #     page_size=8,
    #     id='lessons_scroll',
    #     items='lessons'
    # ),
    # ScrollingGroupCustom(
    #     Group(
    #         Select(
    #             Format('{item[0]}'),
    #             id='lesson_btns',
    #             items='lessons',
    #             item_id_getter=lambda x: x[0],
    #             on_click=handlers.prepare_lesson_data
    #         ),
    #     ),
    #     id='lessons_scroll',
    #     width=8,
    #     height=1,
    #     hide_on_single_page=True,
    # ),
    Button(Const('–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≤—Å–µ'), id='go_back_btn', on_click=go_back),
    parse_mode='HTML',
    getter=getters.repeat_lesson_getter,
    state=BebrisTrainDialogSG.choice_repeat_lesson
)

bebris_train_dialog = Dialog(choice_train_lesson_window)
